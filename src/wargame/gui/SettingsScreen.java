/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wargame.gui;

import java.awt.Color;
import java.awt.Rectangle;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import wargame.WarGame;
import wargame.util.audio.AudioControler;

/**
 *
 * @author hugovs
 */
public class SettingsScreen extends javax.swing.JFrame {

    private static SettingsScreen instance = null;
    
    private SettingsScreen() {
        initComponents();
        initMyComponents();
        
        setLocationRelativeTo(StartScreen.getInstance());
        setBackground(new Color(1.0f,1.0f,1.0f,0.5f));
        
        
        final Rectangle bounds1 = StartScreen.getInstance().getBounds();
        final Rectangle bounds2 = getBounds();
       
    }
    
    void initMyComponents() {
        cbGeneral.setSelected(AudioControler.isGeneralAudio());
         
        cbMusic.setSelected(AudioControler.isMusicAudio());
        cbEffects.setSelected(AudioControler.isEffectAudio());
        
        cbMusic.setEnabled(cbGeneral.isSelected());
        cbEffects.setEnabled(cbGeneral.isSelected());
        
        sliderMusic.setValue((int)(AudioControler.getMusicVolume()*100));
        sliderEffects.setValue((int)(AudioControler.getEffectVolume()*100));
        
        sliderGeneral.setOpaque(false);
        sliderGeneral.setBackground(new Color(1.0f,1.0f,1.0f,0.5f));
        sliderMusic.setOpaque(false);
        sliderMusic.setBackground(new Color(1.0f,1.0f,1.0f,0.5f));
        sliderEffects.setOpaque(false);
        sliderEffects.setBackground(new Color(1.0f,1.0f,1.0f,0.5f));
    }
    
    public static SettingsScreen newInstance(boolean visible) {
        if (instance == null)
            instance = new SettingsScreen();
        instance.setVisible(visible);
        return instance;
    }
    
    public static SettingsScreen getInstance() {
        return instance;
    }
    
    public static void destroy() {
        instance = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        sliderEffects = new javax.swing.JSlider();
        sliderMusic = new javax.swing.JSlider();
        sliderGeneral = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cbGeneral = new wargame.widgets.WCheckBox();
        cbMusic = new wargame.widgets.WCheckBox();
        cbEffects = new wargame.widgets.WCheckBox();
        wButton3 = new wargame.widgets.WButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");
        setAlwaysOnTop(true);
        setUndecorated(true);
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Perfect Dark (BRK)", 1, 48)); // NOI18N
        jLabel3.setText("SETTINGS");

        sliderEffects.setValue(100);
        sliderEffects.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderEffectsStateChanged(evt);
            }
        });

        sliderMusic.setValue(100);
        sliderMusic.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMusicStateChanged(evt);
            }
        });

        sliderGeneral.setValue(100);
        sliderGeneral.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderGeneralStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Perfect Dark (BRK)", 1, 18)); // NOI18N
        jLabel1.setText("Audio");

        cbGeneral.setSelected(true);
        cbGeneral.setText("General");
        cbGeneral.setFont(new java.awt.Font("Perfect Dark (BRK)", 1, 14)); // NOI18N
        cbGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGeneralActionPerformed(evt);
            }
        });

        cbMusic.setSelected(true);
        cbMusic.setText("Music");
        cbMusic.setFont(new java.awt.Font("Perfect Dark (BRK)", 1, 14)); // NOI18N
        cbMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMusicActionPerformed(evt);
            }
        });

        cbEffects.setSelected(true);
        cbEffects.setText("Effects");
        cbEffects.setFont(new java.awt.Font("Perfect Dark (BRK)", 1, 14)); // NOI18N
        cbEffects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEffectsActionPerformed(evt);
            }
        });

        wButton3.setBackground(new java.awt.Color(204, 204, 204));
        wButton3.setForeground(new java.awt.Color(0, 0, 0));
        wButton3.setText("BACK");
        wButton3.setColorMouseOver(new java.awt.Color(35, 0, 255));
        wButton3.setColorMouseOverPost(java.awt.Color.black);
        wButton3.setFont(new java.awt.Font("Perfect Dark (BRK)", 0, 36)); // NOI18N
        wButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbMusic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbEffects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sliderGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(sliderMusic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sliderEffects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(wButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMusic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbEffects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sliderEffects, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(wButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderMusicStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMusicStateChanged
        AudioControler.setMusicVolume((double)sliderMusic.getValue()/100);
        WarGame.mainMusic.update();
    }//GEN-LAST:event_sliderMusicStateChanged

    private void sliderGeneralStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderGeneralStateChanged
        AudioControler.setGeneralVolume((double)sliderGeneral.getValue()/100);
        WarGame.mainMusic.update();
    }//GEN-LAST:event_sliderGeneralStateChanged

    private void sliderEffectsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderEffectsStateChanged
        AudioControler.setEffectVolume((double)sliderEffects.getValue()/100);
    }//GEN-LAST:event_sliderEffectsStateChanged

    private void cbGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGeneralActionPerformed
        AudioControler.setGeneralAudio(cbGeneral.isSelected());
        cbMusic.setEnabled(cbGeneral.isSelected());
        cbEffects.setEnabled(cbGeneral.isSelected());
        sliderMusic.setEnabled(cbGeneral.isSelected());
        sliderEffects.setEnabled(cbGeneral.isSelected());

        if (cbGeneral.isSelected() && !cbMusic.isSelected())   sliderMusic.setEnabled(false);
        if (cbGeneral.isSelected() && !cbEffects.isSelected()) sliderEffects.setEnabled(false);

        WarGame.mainMusic.update();
    }//GEN-LAST:event_cbGeneralActionPerformed

    private void cbMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMusicActionPerformed
        AudioControler.setMusicAudio(cbMusic.isSelected());
        sliderMusic.setEnabled(cbMusic.isSelected());
        WarGame.mainMusic.update();
    }//GEN-LAST:event_cbMusicActionPerformed

    private void cbEffectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEffectsActionPerformed
        AudioControler.setEffectAudio(cbEffects.isSelected());
        sliderEffects.setEnabled(cbEffects.isSelected());
    }//GEN-LAST:event_cbEffectsActionPerformed

    private void wButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_wButton3ActionPerformed

    
    
    /* 
    AudioControler.setMusicAudio(cbMusic.isSelected());
        sliderMusic.setEnabled(cbMusic.isSelected());
        WarGame.mainMusic.update();
    */
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private wargame.widgets.WCheckBox cbEffects;
    private wargame.widgets.WCheckBox cbGeneral;
    private wargame.widgets.WCheckBox cbMusic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSlider sliderEffects;
    private javax.swing.JSlider sliderGeneral;
    private javax.swing.JSlider sliderMusic;
    private wargame.widgets.WButton wButton3;
    // End of variables declaration//GEN-END:variables
}
